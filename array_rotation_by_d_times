Problem:Given an unsorted array arr[] of size N, rotate it by D elements (clockwise). 

Input:
The first line of the input contains T denoting the number of testcases. First line of each test case contains two space separated elements, N denoting the size of the array and an integer D denoting the number size of the rotation. Subsequent line will be the N space separated array elements.

Output:
For each testcase, in a new line, output the rotated array.

Constraints:
1 <= T <= 200
1 <= N <= 107
1 <= D <= N
0 <= arr[i] <= 105

Example:
Input:
2
5 2
1 2 3 4 5 
10 3
2 4 6 8 10 12 14 16 18 20

Output:
3 4 5 1 2
8 10 12 14 16 18 20 2 4 6

Explanation :
Testcase 1: 1 2 3 4 5  when rotated by 2 elements, it becomes 3 4 5 1 2.





Basic solution:


#include<iostream>
using namespace std;
void display(int A[],int n){
    for (int i = 0 ; i <n ;i++  ){
        cout<<A[i]<<" ";
    }cout<<endl;
}


void rotate(int A[] , int n,int d){
    int temp;
    for(int i = 0; i<d;i++){
        temp = A[0];
        for(int j =0;j<n-1;j++){
            A[j] = A[j+1];
            
        }
        A[n-1]=temp;
    }
}
int main()
 {
     int t , n ,d ;
     cin >> t ;
     for(int i = 0;i<t ; i++){
         cin >>n >> d;
         int A[n];
         for (int i = 0 ; i<n ; i++){
             cin>>A[i];
         }
         
        rotate(A,n,d);
        display(A,n);
        
         
         
     }
     
     
    
	return 0;
}
